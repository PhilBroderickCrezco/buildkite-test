steps:
  - label: "Check buildkite-agent"
    key: "test"
    command: |
      cd ..
      ls -a
      buildkite-agent meta-data set "successful" "true"
    plugins:
      - docker:
          image: ubuntu:latest
          mount-buildkite-agent: true
          user: root

  - label: ":dotnet: Get affected projects"
    depends_on: "test"
    key: "affected"
    command: |
      # Install jq for JSON parsing
      apt-get update && apt-get install -y jq
    
      dotnet tool restore
      # Store affected projects in a file to be used by later steps
      dotnet affected --format=json --output-name affected-projects --from $BUILDKITE_COMMIT --to master
      
      # Check if any projects are affected
      if [ "$(cat affected-projects.json | jq 'length')" -gt 0 ]; then
        echo "Affected projects found"
        cat affected-projects.json | jq -r '.[]' > affected-list.txt
        echo "true" > has-affected-projects.txt
        buildkite-agent meta-data set "has-affected-projects" "true"
      else
        echo "No affected projects found"
        echo "[]" > affected-projects.json
        touch affected-list.txt
        echo "false" > has-affected-projects.txt
        buildkite-agent meta-data set "has-affected-projects" "false"
      fi
    plugins:
      - docker:
          image: mcr.microsoft.com/dotnet/sdk:8.0
          mount-buildkite-agent: true
          user: root
      - artifacts:
          upload:
            - affected-projects.json
            - affected-list.txt
            - has-affected-projects.txt

  - label: ":pipeline: Generate restore/build pipeline"
    key: "pipeline-gen"
    depends_on: "affected"
    command: ".buildkite/scripts/restore.sh"
    plugins:
      - artifacts:
          download:
            - affected-projects.json
            - has-affected-projects.txt